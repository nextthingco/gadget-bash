#!/bin/bash

MKDIR=${MKDIR:-mkdir}
TOUCH=${TOUCH:-touch}
REQUIRED=( ${MKDIR} ${TOUCH} )

source ${INCLUDEDIR}/check_required

SSH_OPTS="-oStrictHostKeyChecking=no -oUserKnownHostsFile=/dev/null"

function create_directory {
	if [[ ! -d "${1}" ]]; then
		mkdir -p ${1}
		if [ ${?} -ne 0 ]; then
			echo "  - failed to create directory ${1}"
			exit 1
		fi
	fi
}

function create_file {
	if [[ ! -f "${1}" ]]; then
		touch ${1}
		if [ ${?} -ne 0 ]; then
			echo "  - failed to create file ${1}"
			exit 1
		fi
	fi
}

function check_directory {
	if [[ ! -d "${1}" ]]; then
		echo "  - could not locate directory ${1}"
	fi
}

function check_file {
	if [[ ! -f "${1}" ]]; then
		echo "  - could not locate file ${1}"
	fi
}

function create_new_key {
	## BEGIN NEEDS SAFETY CHECKS
	echo "  First use: generating unique ssh key"
	TMPDIR=`${MKTEMP} -d -t gadget-ssh-XXXXXX`
	check_directory ${TMPDIR}
	
	${SSH_KEYGEN} -t rsa -f ${TMPDIR}/${name}_${uuid} -N ""
	chmod 600 ${TMPDIR}/${name}_${uuid}*
	echo "  Copying new key to gadget"
	${SCP} ${SSH_OPTS} -i ${INCLUDEDIR}/id_rsa ${TMPDIR}/${name}_${uuid}.pub root@${IP}:/root/.ssh/authorized_keys
	echo "  Installing new key to host"
	cp ${TMPDIR}/${name}_${uuid} ${HOME}/.ssh/${name}_${uuid}
	${SSH_ADD} ${HOME}/.ssh/${name}_${uuid}
	rm -rf ${TMPDIR}
	## END NEEDS SAFETY CHECKS
}
