#!/bin/bash

SCRIPTDIR=$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )
INCLUDEDIR="${SCRIPTDIR}/include"

DIRECTORY="$PWD"

F_VERB=0
exec 3>&1
exec 4>&2

C_INIT=0
C_BUILD=0
C_DEPLOY=0
C_START=0
C_STOP=0
C_STATUS=0
C_DELETE=0
C_SHELL=0
C_LOGS=0

source ${INCLUDEDIR}/os_detect
source ${INCLUDEDIR}/common

while test $# -gt 0; do
	case "$1" in
		-v|--version|version)
			echo "  - version: $GADGET_VERSION"
			exit 0
			;;
		-V|--verbose|verbose)
			echo "  - verbose mode: ENGAGE"
			F_VERB=1
			shift
			;;
		-h|--help|help)
			echo "  - help                                                             " 1>&3 2>&4
			echo "    Flags:                                                           " 1>&3 2>&4
			echo "      -v | --version   | version      [ show this utility's version ]" 1>&3 2>&4
			echo "      -V | --verbose   | verbose      [ more explicit output        ]" 1>&3 2>&4
			echo "      -h | --help      | help         [ print help text             ]" 1>&3 2>&4
			echo "      -C | --directory |              [ specify a foreign directory ]" 1>&3 2>&4
			echo "    Commands:                                                        " 1>&3 2>&4
			echo "      init                            [ create project skeleton     ]" 1>&3 2>&4
			echo "      build                           [ build project image         ]" 1>&3 2>&4
			echo "      deploy                          [ copy image onto gadget      ]" 1>&3 2>&4
			echo "      start                           [ run/create a container      ]" 1>&3 2>&4
			echo "      stop                            [ stop/delete a container     ]" 1>&3 2>&4
			echo "      status                          [ read container status       ]" 1>&3 2>&4
			echo "      delete                          [ remove an image from gadget ]" 1>&3 2>&4
			echo "      shell                           [ gain shell access to debug  ]" 1>&3 2>&4
			echo "      logs                            [ show container's stdout     ]" 1>&3 2>&4
			exit 0
			;;
		-C|--directory)
			echo "  - in ${2}" 1>&3 2>&4
			DIRECTORY="${PWD}/${2}"
			shift 2
			;;
		init)
			C_INIT=1
			echo "  - creating new project" 1>&3 2>&4
			shift
			;;
		build)
			C_BUILD=1
			echo "  - building project" 1>&3 2>&4
			shift
			;;
		deploy)
			C_DEPLOY=1
			echo "  - deploying project" 1>&3 2>&4
			shift
			;;
		start)
			C_START=1
			echo "  - creating/starting container" 1>&3 2>&4
			shift
			;;
		stop)
			C_STOP=1
			echo "  - stopping/deleting container" 1>&3 2>&4
			shift
			;;
		status)
			C_STATUS=1
			echo "  - status" 1>&3 2>&4
			shift
			;;
		delete)
			C_DELETE=1
			echo "  - delete image on gadget" 1>&3 2>&4
			shift
			;;
		shell)
			C_SHELL=1
			echo "  - entering gadget's shell" 1>&3 2>&4
			shift
			;;
		logs)
			C_LOG=1
			echo "  - retrieving logs" 1>&3 2>&4
			shift
			;;
		*)
			echo "  - unidentified param $1" 1>&3 2>&4
			echo "" 1>&3 2>&4
			echo "  - help                                                             " 1>&3 2>&4
			echo "    Flags:                                                           " 1>&3 2>&4
			echo "      -v | --version   | version      [ show this utility's version ]" 1>&3 2>&4
			echo "      -V | --verbose   | verbose      [ more explicit output        ]" 1>&3 2>&4
			echo "      -h | --help      | help         [ print help text             ]" 1>&3 2>&4
			echo "      -C | --directory |              [ specify a foreign directory ]" 1>&3 2>&4
			echo "    Commands:                                                        " 1>&3 2>&4
			echo "      init                            [ create project skeleton     ]" 1>&3 2>&4
			echo "      build                           [ build project image         ]" 1>&3 2>&4
			echo "      deploy                          [ copy image onto gadget      ]" 1>&3 2>&4
			echo "      start                           [ run/create a container      ]" 1>&3 2>&4
			echo "      stop                            [ stop/delete a container     ]" 1>&3 2>&4
			echo "      status                          [ read container status       ]" 1>&3 2>&4
			echo "      delete                          [ remove an image from gadget ]" 1>&3 2>&4
			echo "      shell                           [ gain shell access to debug  ]" 1>&3 2>&4
			echo "      logs                            [ show container's stdout     ]" 1>&3 2>&4
			exit 1
	esac
	
	COMMANDS=(
		${C_INIT}
		${C_BUILD}
		${C_DEPLOY}
		${C_START}
		${C_STOP}
		${C_STATUS}
		${C_DELETE}
		${C_SHELL}
		${C_LOG}
	)
	
	source ${INCLUDEDIR}/check_cmd_conflict
done

## Verbose stream jacking
[[ 0 -eq ${F_VERB}   ]] && exec 1>/dev/null && exec 2>/dev/null

[[ 1 -eq ${C_INIT}   ]] && source ${INCLUDEDIR}/gadget_init   && exit 0
[[ 1 -eq ${C_BUILD}  ]] && source ${INCLUDEDIR}/gadget_build  && exit 0
[[ 1 -eq ${C_DEPLOY} ]] && source ${INCLUDEDIR}/gadget_deploy && exit 0
[[ 1 -eq ${C_START}  ]] && source ${INCLUDEDIR}/gadget_start  && exit 0
[[ 1 -eq ${C_STOP}   ]] && source ${INCLUDEDIR}/gadget_stop   && exit 0
[[ 1 -eq ${C_STATUS} ]] && source ${INCLUDEDIR}/gadget_status && exit 0
[[ 1 -eq ${C_DELETE} ]] && source ${INCLUDEDIR}/gadget_delete && exit 0
[[ 1 -eq ${C_SHELL}  ]] && source ${INCLUDEDIR}/gadget_shell  && exit 0
[[ 1 -eq ${C_LOG}    ]] && source ${INCLUDEDIR}/gadget_logs   && exit 0

## turn into help function

			echo "  - help                                                             " 1>&3 2>&4
			echo "    Flags:                                                           " 1>&3 2>&4
			echo "      -v | --version   | version      [ show this utility's version ]" 1>&3 2>&4
			echo "      -V | --verbose   | verbose      [ more explicit output        ]" 1>&3 2>&4
			echo "      -h | --help      | help         [ print help text             ]" 1>&3 2>&4
			echo "      -C | --directory |              [ specify a foreign directory ]" 1>&3 2>&4
			echo "    Commands:                                                        " 1>&3 2>&4
			echo "      init                            [ create project skeleton     ]" 1>&3 2>&4
			echo "      build                           [ build project image         ]" 1>&3 2>&4
			echo "      deploy                          [ copy image onto gadget      ]" 1>&3 2>&4
			echo "      start                           [ run/create a container      ]" 1>&3 2>&4
			echo "      stop                            [ stop/delete a container     ]" 1>&3 2>&4
			echo "      status                          [ read container status       ]" 1>&3 2>&4
			echo "      delete                          [ remove an image from gadget ]" 1>&3 2>&4
			echo "      shell                           [ gain shell access to debug  ]" 1>&3 2>&4
			echo "      logs                            [ show container's stdout     ]" 1>&3 2>&4
